/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF     0
#define NUM     1
#define MED     2
#define NAV     3

#define BT0  &bt BT_SEL 0
#define BT1  &bt BT_SEL 1
#define BT2  &bt BT_SEL 2
#define BT3  &bt BT_SEL 3
#define BTN  &bt BT_NXT
#define BTP  &bt BT_PRV
#define BTC  &bt BT_CLR
#define BTCA  &bt BT_CLR_ALL

#define NO  &none
#define TR  &trans
#define CVOLU  &kp C_VOL_UP
#define CVOLD  &kp C_VOL_DN
#define CSNEX  &kp C_NEXT
#define CSPRE  &kp C_PREV

#define BOUT  &out OUT_TOG
#define BOUU  &out OUT_USB
#define BOUB  &out OUT_BLE

#define CBRID &kp C_BRI_DN
#define CBRIU &kp C_BRI_UP
  
/ {
macros {
  #define OS_LEAD  &kp RALT &kp U  // OS specific sequence to initialize unicode
  #define OS_TRAIL &kp RET         // OS specific sequence to terminate unicode

  ntil: ntil { 
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    wait-ms = <0>;
    tap-ms = <0>;
    bindings
      = <&macro_press &kp LALT>
      , <&macro_tap &kp N0 &kp N0 &kp F &kp N1>
      , <&macro_release &kp LALT>
      ;    
  };

  ntilup: ntilup { 
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    wait-ms = <0>;
    tap-ms = <0>;
    bindings
      = <&macro_press &kp LALT>
      , <&macro_tap &kp N0 &kp N0 &kp D &kp N1>
      , <&macro_release &kp LALT>
      ;    
  };

  accut: accut { 
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    wait-ms = <0>;
    tap-ms = <0>;
    bindings
      = <&macro_press &kp LALT>
      , <&macro_tap &kp N0 &kp N3 &kp N0 &kp N1>
      , <&macro_release &kp LALT>
      ;    
  };

  excldn: excldn { 
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    wait-ms = <0>;
    tap-ms = <0>;
    bindings
      = <&macro_press &kp LALT>
      , <&macro_tap &kp N0 &kp N0 &kp A &kp N1>
      , <&macro_release &kp LALT>
      ;    
  };

  qmkdn: qmkdn {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    wait-ms = <0>;
    tap-ms = <0>;
    bindings
      = <&macro_press &kp LALT>
      , <&macro_tap &kp N0 &kp N0 &kp B &kp F>
      , <&macro_release &kp LALT>
      ;    
  };

  pss: pss {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    wait-ms = <40>;
    tap-ms = <40>;
    bindings 
        = <&kp I &kp P &kp S &kp U &kp M &kp E &kp S &kp S &kp E>
        ;
  };

  pss2: pss2 {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    wait-ms = <40>;
    tap-ms = <40>;
    bindings 
        = <&kp LS(C) &kp A &kp M &kp P &kp N3 &kp S &kp T &kp R &kp N3 &kp N9 &kp DLLR &kp DLLR>
        ;
  };

  locks: locks {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    wait-ms = <5>;
    tap-ms = <5>;
    bindings
        = <&macro_press &kp LCTRL &kp LGUI>
        , <&macro_tap &kp Q>
        , <&macro_release &kp LCTRL &kp LGUI>
        ;
  };

  spacl: spacl {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LCTRL>
        , <&macro_tap &kp LEFT>
        , <&macro_release &kp LCTRL>
        ;
  };
  
  spacr: spacr {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LCTRL>
        , <&macro_tap &kp RIGHT>
        , <&macro_release &kp LCTRL>
        ;
  };

  spacu: spacu {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings
        = <&macro_press &kp LCTRL>
        , <&macro_tap &kp UP>
        , <&macro_release &kp LCTRL>
        ;
  };

  copies: copies {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    wait-ms = <5>;
    tap-ms = <5>;
    bindings
        = <&macro_press &kp LGUI &kp LSHFT>
        , <&macro_tap &kp N4>
        , <&macro_release &kp LGUI &kp LSHFT>
        ;
  };
};
};

/ {
  keymap {
    compatible = "zmk,keymap";

    // -----------------------------------------------------------------------------------------
    default_layer {
      bindings = <
       NO  &lt NAV Q  &kp W  &kp E  &kp R  &kp T          &kp Y  &kp U  &kp I  &kp O  &lt NAV P  NO  
       NO  &lt MED A  &kp S  &kp D  &lt NUM F  &kp G      &kp H  &lt NUM J  &kp K  &kp L  &lt MED BSPC  NO
       NO  &mt LCTRL Z  &kp X  &kp C  &mt LALT V  &kp B   &kp N  &kp M  &kp COMMA  &kp DOT  &mt LCTRL ENTER  NO
       &mt LCMD TAB  &mt LSHFT ESC  NO                    NO  &mt RSHFT SPACE  &kp CAPS
      >;
    };

    // -----------------------------------------------------------------------------------------
    num_layer {
      bindings = <
       TR  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT       &kp N7  &kp N8  &kp N9  &kp N0  &kp STAR  TR
       TR  &kp AMPS  &kp PIPE  &kp TILDE  &kp LPAR  &kp RPAR     &kp N4  &kp N5  &kp N6  &kp PLUS  &kp MINUS  TR
       TR  &kp UNDER  &kp BSLH  &kp CARET  &kp LBKT  &kp RBKT    &kp N1  &kp N2  &kp N3  &kp EQUAL  &kp FSLH  TR
       &kp LBRC  &kp RBRC  TR                                    TR  &kp QMARK  &kp SEMI      
      >;
    };

    // -----------------------------------------------------------------------------------------
    med_layer {
      bindings = <      
        TR  &excldn  TR  TR  TR  TR                        CVOLU  CVOLD  CSPRE  CSNEX  &kp C_PP  TR  
        TR  TR  TR  TR  CBRID  CBRIU                       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &ntil  TR
        TR  &kp GRAVE  &ntilup  &kp LT  &kp GT  &kp HOME   TR  &kp COLON  &kp SQT  &kp DQT  &accut   TR
        &locks  &copies  TR                                TR  &qmkdn  TR
      >;
    };

    // -----------------------------------------------------------------------------------------
    nav_layer {
      bindings = <      
        TR  BT0  BT1  BT2  BT3  BTC        TR  TR  TR  TR  TR  TR  
        TR  BTCA  TR  TR  BTP  BTN         &spacl  TR  &spacu  &spacr  TR  TR
        TR  BOUT  BOUU  BOUB  TR  TR       &copies  &pss  &pss2  &locks  TR  TR
        TR  TR  TR  TR  TR  TR             TR  TR  TR
      >;
    };

  };
};
             
